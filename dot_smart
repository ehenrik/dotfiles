export AWS_CONFIGURE_SSO_DEFAULT_SSO_REGION=eu-central-1
export AWS_DEFAULT_REGION=eu-central-1
export AWS_REGION=eu-central-1
export AWS_SSO_CONFIG=/Users/henrikengman/.aws-sso/config.yaml
export AWS_CONFIGURE_SSO_DEFAULT_SSO_START_URL=https://smarteurope.awsapps.com/start
export AWS_CONFIGURE_SSO_DEFAULT_SSO_REGION=eu-central-1
export AWS_DEFAULT_SSO_START_URL=https://smarteurope.awsapps.com/start
export AWS_DEFAULT_SSO_REGION=eu-central-1
# AWS SSO

sso() {
    unset AWS_PROFILE
    export AWS_PROFILE=$1
    aws sts get-caller-identity &> /dev/null || aws sso login --profile $1 || (unset AWS_PROFILE && aws-sso-util configure profile --no-credential-process $1)
    aws-export-credentials --credentials-file-profile $1 || aws sso login --profile $1 && aws-export-credentials --credentials-file-profile $1
    sed -i '/aws_credential_expiration/d' ${AWS_CONFIG_FILE:-~/.aws/config}
}

# AWS SSO completion
_sso() {
    local -a completions
    while IFS='\n' read -r comp; do
        if [ -n "$comp" ]; then
            completions+=${comp}
        fi
    done < <(grep '^\[profile.*\]$' ${AWS_CONFIG_FILE:-~/.aws/config} | sed 's/^\[profile \(.*\)\]$/\1/')
    IFS=\  compadd $(echo $completions[@])
}

# BEGIN_AWS_SSO_CLI

# AWS SSO requires `bashcompinit` which needs to be enabled once and
# only once in your shell.  Hence we do not include the two lines:
#
# autoload -Uz +X compinit && compinit
# autoload -Uz +X bashcompinit && bashcompinit
#
# If you do not already have these lines, you must COPY the lines
# above, place it OUTSIDE of the BEGIN/END_AWS_SSO_CLI markers
# and of course uncomment it

__aws_sso_profile_complete() {
     local _args=${AWS_SSO_HELPER_ARGS:- -L error}
    _multi_parts : "($(/opt/homebrew/bin/aws-sso ${=_args} list --csv Profile))"
}

aws-sso-profile() {
    local _args=${AWS_SSO_HELPER_ARGS:- -L error}
    if [ -n "$AWS_PROFILE" ]; then
        echo "Unable to assume a role while AWS_PROFILE is set"
        return 1
    fi
    eval $(/opt/homebrew/bin/aws-sso ${=_args} eval -p "$1")
    if [ "$AWS_SSO_PROFILE" != "$1" ]; then
        return 1
    fi
}

aws-sso-clear() {
    local _args=${AWS_SSO_HELPER_ARGS:- -L error}
    if [ -z "$AWS_SSO_PROFILE" ]; then
        echo "AWS_SSO_PROFILE is not set"
        return 1
    fi
    eval $(/opt/homebrew/bin/aws-sso ${=_args} eval -c)
}

# compdef __aws_sso_profile_complete aws-sso-profile
# complete -C /opt/homebrew/bin/aws-sso aws-sso

# END_AWS_SSO_CLI
